{"version":3,"sources":["components/Pagination/Pagination.tsx","utils.ts","App.tsx","index.tsx"],"names":["Pagination","total","perPage","currentPage","onPageChange","pageNumbers","pages","totalPageNumber","Math","floor","i","push","getPageNumbers","isFirstPage","isLastPage","length","className","classNames","href","onClick","map","pageNumber","active","items","from","to","numbers","n","getNumbers","App","useState","itemPerPage","setItemPerPage","setCurrentPage","currentItems","startIndex","endIndex","slice","getCurrentItems","indexOf","id","value","onChange","event","target","Number","htmlFor","page","currentItem","ReactDOM","render","document","getElementById"],"mappings":"sNAYaA,EAA8B,SAAC,GAKrC,IAJLC,EAII,EAJJA,MACAC,EAGI,EAHJA,QACAC,EAEI,EAFJA,YACAC,EACI,EADJA,aAEMC,ECGD,SAAwBJ,EAAeC,GAM5C,IALA,IAAMI,EAAQ,GACRC,EAAkBN,EAAQC,IAAY,EACxCD,EAAQC,EACRM,KAAKC,MAAMR,EAAQC,GAAW,EAEzBQ,EAAI,EAAGA,GAAKH,EAAiBG,GAAK,EACzCJ,EAAMK,KAAKD,GAGb,OAAOJ,EDbaM,CAAeX,EAAOC,GAEpCW,EAA8B,IAAhBV,EACdW,EAAaX,IAAgBE,EAAYA,EAAYU,OAAS,GAcpE,OACE,mCACE,qBAAIC,UAAU,aAAd,UACE,oBACEA,UAAWC,IACT,YACA,CACE,SAAYJ,IAJlB,SAQE,mBACE,UAAQ,WACRG,UAAU,YACVE,KAAK,QACL,gBAAeL,EACfM,QA5Bc,WACjBN,GACHT,EAAaD,EAAc,IAqBvB,oBAWDE,EAAYe,KAAI,SAAAC,GAAU,OACzB,oBAEEL,UAAWC,IACT,YACA,CACEK,OAAQD,IAAelB,IAL7B,SASE,mBACE,UAAQ,WACRa,UAAU,YACVE,KAAI,WAAMG,GACVF,QAAS,kBAAMf,EAAaiB,IAJ9B,SAMGA,KAdEA,MAmBT,oBACEL,UAAWC,IACT,YACA,CACE,SAAYH,IAJlB,SAQE,mBACE,UAAQ,WACRE,UAAU,YACVE,KAAK,QACL,gBAAeJ,EACfK,QA9Dc,WACjBL,GACHV,EAAaD,EAAc,IAuDvB,0BE/EJoB,EDPC,SAAoBC,EAAcC,GAGvC,IAFA,IAAMC,EAAU,GAEPC,EAAIH,EAAMG,GAAKF,EAAIE,GAAK,EAC/BD,EAAQf,KAAKgB,GAGf,OAAOD,ECAKE,CAAW,EAAG,IACzBR,KAAI,SAAAO,GAAC,qBAAYA,MAEPE,EAAgB,WAC3B,MAAsCC,mBAAS,GAA/C,mBAAOC,EAAP,KAAoBC,EAApB,KACA,EAAsCF,mBAAS,GAA/C,mBAAO3B,EAAP,KAAoB8B,EAApB,KAEMC,EDJD,SACLX,EACAQ,EACA5B,GAEA,IAAMgC,EAAaJ,GAAe5B,EAAc,GAC1CiC,EAAWL,EAAc5B,EAE/B,OAAOoB,EAAMc,MAAMF,EAAYC,GCJVE,CAAgBf,EAAOQ,EAAa5B,GAWnDgC,EAAaZ,EAAMgB,QAAQL,EAAa,IACxCE,EAAWb,EAAMgB,QAAQL,EAAaA,EAAanB,OAAS,IAAM,EAGxE,OACE,sBAAKC,UAAU,YAAf,UACE,uDAEA,oBAAGA,UAAU,OAAO,UAAQ,OAA5B,kBACQb,EADR,WAC6BgC,EAAa,EAD1C,MACgDC,EADhD,aAIA,sBAAKpB,UAAU,iBAAf,UACE,qBAAKA,UAAU,0BAAf,SACE,yBACE,UAAQ,kBACRwB,GAAG,kBACHxB,UAAU,eACVyB,MAAOV,EACPW,SAAU,SAACC,GAAD,OAxBIzC,EAwBsByC,EAAMC,OAAOH,MAvBzDR,EAAe,QACfD,EAAea,OAAO3C,IAFD,IAACA,GAmBhB,UAOE,wBAAQuC,MAAO,EAAf,eACA,wBAAQA,MAAO,EAAf,eACA,wBAAQA,MAAO,GAAf,gBACA,wBAAQA,MAAO,GAAf,qBAIJ,uBAAOK,QAAQ,kBAAkB9B,UAAU,qBAA3C,+BAKF,cAAC,EAAD,CACEf,MAAO,GACPC,QAAS6B,EACT5B,YAAaA,EACbC,aA9Ce,SAAC2C,GACpBd,EAAec,MAgDb,6BACGb,EAAad,KAAI,SAAA4B,GAAW,OAC3B,oBAAsB,UAAQ,OAA9B,SACGA,GADMA,YChEnBC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.6d256994.chunk.js","sourcesContent":["/* eslint-disable */\n\nimport classNames from \"classnames\";\nimport { getPageNumbers } from \"../../utils\";\n\ntype Props = {\n  total: number\n  perPage: number\n  currentPage: number\n  onPageChange: (page: number) => void\n};\n\nexport const Pagination: React.FC<Props> = ({\n  total,\n  perPage,\n  currentPage,\n  onPageChange,\n}) => {\n  const pageNumbers = getPageNumbers(total, perPage);\n\n  const isFirstPage = currentPage === 1;\n  const isLastPage = currentPage === pageNumbers[pageNumbers.length - 1];\n\n  const prevPagehandler = () => {\n    if (!isFirstPage) {\n      onPageChange(currentPage - 1)\n    }\n  }\n\n  const lastPagehandler = () => {\n    if (!isLastPage) {\n      onPageChange(currentPage + 1)\n    }\n  }\n\n  return (\n    <>\n      <ul className=\"pagination\">\n        <li\n          className={classNames(\n            'page-item',\n            {\n              'disabled': isFirstPage,\n            }\n          )}\n        >\n          <a\n            data-cy=\"prevLink\"\n            className=\"page-link\"\n            href=\"#prev\"\n            aria-disabled={isFirstPage}\n            onClick={prevPagehandler}\n          >\n            «\n          </a>\n        </li>\n\n        {pageNumbers.map(pageNumber => (\n          <li\n            key={pageNumber}\n            className={classNames(\n              'page-item',\n              {\n                active: pageNumber === currentPage,\n              }\n            )}\n          >\n            <a\n              data-cy=\"pageLink\"\n              className=\"page-link\"\n              href={`#${pageNumber}`}\n              onClick={() => onPageChange(pageNumber)}\n            >\n              {pageNumber}\n            </a>\n          </li>\n        ))}\n\n        <li\n          className={classNames(\n            'page-item',\n            {\n              'disabled': isLastPage,\n            }\n          )}\n        >\n          <a\n            data-cy=\"nextLink\"\n            className=\"page-link\"\n            href=\"#next\"\n            aria-disabled={isLastPage}\n            onClick={lastPagehandler}\n          >\n            »\n          </a>\n        </li>\n      </ul>\n    </>\n  );\n};\n","export function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n\nexport function getCurrentItems(\n  items: string[],\n  itemPerPage: number,\n  currentPage: number,\n): string[] {\n  const startIndex = itemPerPage * (currentPage - 1);\n  const endIndex = itemPerPage * currentPage;\n\n  return items.slice(startIndex, endIndex);\n}\n\nexport function getPageNumbers(total: number, perPage: number): number[] {\n  const pages = [];\n  const totalPageNumber = total % perPage === 0\n    ? total / perPage\n    : Math.floor(total / perPage) + 1;\n\n  for (let i = 1; i <= totalPageNumber; i += 1) {\n    pages.push(i);\n  }\n\n  return pages;\n}\n","import React, { useState } from 'react';\nimport './App.css';\nimport { Pagination } from './components/Pagination';\nimport { getCurrentItems, getNumbers } from './utils';\n\n/* eslint-disable */\n\nconst items = getNumbers(1, 42)\n  .map(n => `Item ${n}`);\n\nexport const App: React.FC = () => {\n  const [itemPerPage, setItemPerPage] = useState(5);\n  const [currentPage, setCurrentPage] = useState(1);\n\n  const currentItems = getCurrentItems(items, itemPerPage, currentPage);\n\n  const onPageChange = (page: number) => {\n    setCurrentPage(page);\n  };\n\n  const perPageHandler = (perPage: string) => {\n    setCurrentPage(1);\n    setItemPerPage(Number(perPage));\n  }\n\n  const startIndex = items.indexOf(currentItems[0]);\n  const endIndex = items.indexOf(currentItems[currentItems.length - 1]) + 1;\n\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n\n      <p className=\"lead\" data-cy=\"info\">\n        Page {currentPage} (items {startIndex + 1} - {endIndex} of 42)\n      </p>\n\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <select\n            data-cy=\"perPageSelector\"\n            id=\"perPageSelector\"\n            className=\"form-control\"\n            value={itemPerPage}\n            onChange={(event) => perPageHandler(event.target.value)}\n          >\n            <option value={3}>3</option>\n            <option value={5}>5</option>\n            <option value={10}>10</option>\n            <option value={20}>20</option>\n          </select>\n        </div>\n\n        <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n          items per page\n        </label>\n      </div>\n\n      <Pagination\n        total={42} // total number of items to paginate\n        perPage={itemPerPage} // number of items per page\n        currentPage={currentPage} /* optional with 1 by default */\n        onPageChange={onPageChange}\n      />\n\n      <ul>\n        {currentItems.map(currentItem => (\n          <li key={currentItem} data-cy=\"item\">\n            {currentItem}\n          </li>\n        ))}\n\n      </ul>\n\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}